[{"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\pages\\Home.jsx":"2","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Loading\\Loading.jsx":"3","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Enter\\Enter.jsx":"4","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\SubjectCard\\SubjectCard.jsx":"5","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\ConfigModal\\ConfigModal.jsx":"6","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Enter\\View.jsx":"7","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\View\\View.jsx":"8","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Question\\Question.jsx":"9","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\FolderSelector\\FolderSelector.jsx":"10","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Table\\TableSegmentation.jsx":"11","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Radar\\Radar.jsx":"12","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Boxplot\\BoxplotParcellation.jsx":"13","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Table\\TableParcellation.jsx":"14","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Boxplot\\BoxplotSegmentation.jsx":"15","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Scatter\\Scatter.jsx":"16","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Line\\Midline.jsx":"17","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Boxplot\\Boxplot.jsx":"18","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\InfoTool\\InfoTool.jsx":"19"},{"size":766,"mtime":1678683580071,"results":"20","hashOfConfig":"21"},{"size":5792,"mtime":1678683580072,"results":"22","hashOfConfig":"21"},{"size":2203,"mtime":1678683580029,"results":"23","hashOfConfig":"21"},{"size":1826,"mtime":1678683580023,"results":"24","hashOfConfig":"21"},{"size":281,"mtime":1678683580032,"results":"25","hashOfConfig":"21"},{"size":2351,"mtime":1678683580022,"results":"26","hashOfConfig":"21"},{"size":4232,"mtime":1681071406642,"results":"27","hashOfConfig":"21"},{"size":8020,"mtime":1678683580033,"results":"28","hashOfConfig":"21"},{"size":447,"mtime":1678683580030,"results":"29","hashOfConfig":"21"},{"size":1958,"mtime":1678683580026,"results":"30","hashOfConfig":"21"},{"size":5508,"mtime":1678683580071,"results":"31","hashOfConfig":"21"},{"size":2997,"mtime":1678683580067,"results":"32","hashOfConfig":"21"},{"size":3621,"mtime":1678683580063,"results":"33","hashOfConfig":"21"},{"size":6343,"mtime":1678683580070,"results":"34","hashOfConfig":"21"},{"size":1316,"mtime":1678683580064,"results":"35","hashOfConfig":"21"},{"size":4343,"mtime":1678683580068,"results":"36","hashOfConfig":"21"},{"size":3144,"mtime":1678683580066,"results":"37","hashOfConfig":"21"},{"size":899,"mtime":1678683580063,"results":"38","hashOfConfig":"21"},{"size":244,"mtime":1678683580028,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"y2h9vy",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\index.js",[],["81","82"],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\pages\\Home.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Loading\\Loading.jsx",["83"],"import React, { useState, useEffect } from 'react'\r\nimport './Loading.scss'\r\nimport { Dna } from  'react-loader-spinner'\r\n\r\nfunction Loading() {\r\n\r\n  const phrases = [\r\n    'The corpus callosum is the largest nerve fiber structure in the human brain. It contains about 200 million nerve fibers and weighs about 250 grams.',\r\n    'The corpus callosum was discovered by the Italian anatomist Luigi Rolando in 1809. He called it the \"cortical bridge\" because it connected the cortical areas of both cerebral hemispheres.',\r\n    \"The corpus callosum is responsible for allowing the transfer of sensory, motor and cognitive information between the cerebral hemispheres. That means it's important for functions like perception, language, learning, and memory.\",\r\n    'Some medical conditions, such as epilepsy, can be treated with surgery that cuts the corpus callosum. This is known as a callosotomy and is done to prevent epileptic activity from spreading from one hemisphere to the other.',\r\n    'Some research suggests that the size and shape of the corpus callosum may be related to gender differences. For example, studies indicate that the corpus callosum is proportionally larger in women than in men. Additionally, some research suggests that the corpus callosum may be more asymmetrical in men than in women.'\r\n  ]\r\n  \r\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentPhraseIndex(currentIndex => (currentIndex + 1) % phrases.length)\r\n    }, 1000)\r\n    return () => clearInterval(interval)\r\n  }, [phrases])\r\n\r\n  setTimeout(() => {\r\n    window.location.assign(\"/Home\")\r\n  }, 5000);\r\n\r\n  return (\r\n    <div className='loader-container' id='loading-container'>\r\n        <Dna\r\n          visible={true}\r\n          height=\"80\"\r\n          width=\"80\"\r\n          ariaLabel=\"dna-loading\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"dna-wrapper\"\r\n        />\r\n      <span className='wait-phase'>Please wait a moment while we prepare everything.</span>\r\n      <span>Did you know?</span> \r\n      <span className='phrases'>{phrases[currentPhraseIndex]}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Enter\\Enter.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\SubjectCard\\SubjectCard.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\ConfigModal\\ConfigModal.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Enter\\View.jsx",["84"],"import React, { useState } from 'react'\r\nimport FolderSelector from '../FolderSelector/FolderSelector'\r\nimport { TbPlus } from 'react-icons/tb'\r\nimport Question from '../Question/Question';\r\n\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nconst questions = [\r\n    { \"question\": \"How to enter data into the software?\", \"response\": \"To insert data into inCCsight, click on the 'Folder' icon on the home screen and select the folder containing the subjects to perform the analysis. Each 'Subject' must be a folder containing the eigenvalues ​​and eigenvectors files.Click '+' to add more subject sets.\" },\r\n    { \"question\": \"How to add more groups to be analyzed?\", \"response\": \"Se vira\" },\r\n    { \"question\": \"How to suggest modifications to the tool?\", \"response\": \"Se vira\" },\r\n    { \"question\": \"What are the current limitations of the tool?\", \"response\": \"Se vira\" },\r\n    { \"question\": \"How to add different charts?\", \"response\": \"Se vira\" }\r\n]\r\n\r\nfunction openWindow() {\r\n    ipcRenderer.send('open-window');\r\n}\r\n\r\nfunction View(props) {\r\n\r\n    const [folders, setFolders] = useState([<FolderSelector key={1} id={1} />]);\r\n    const [filter, setFilter] = useState(\"\")\r\n\r\n    function startAnalyzes() {\r\n        let t = localStorage.getItem(\"folders\")\r\n        // window.startThais(t)\r\n        window.startROQS(t)\r\n        // openWindow();\r\n    }\r\n\r\n    function handleAddButtonClick() {\r\n        const newFolders = [\r\n            ...folders,\r\n            <FolderSelector key={folders.length + 1} id={folders.length + 1} />\r\n        ];\r\n        setFolders(newFolders);\r\n    }\r\n\r\n    const filteredQuestions = questions.filter((question) => {\r\n        const questionText = question[\"question\"].toLowerCase();\r\n        const responseText = question[\"response\"].toLowerCase();\r\n        const filterText = filter.toLowerCase();\r\n\r\n        return questionText.includes(filterText) || responseText.includes(filterText);\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setFilter(event.target.value);\r\n    };\r\n\r\n    if (props.type === \"Input\") {\r\n        return (\r\n            <div className='enter-right'>\r\n\r\n                <span className='enter-name'>Enter the folders you want to perform the analysis.</span>\r\n                <span className='enter-name'>Click in \"+\" for insert more groups.</span>\r\n\r\n                <div className='folders-inputs'>\r\n\r\n                    {folders.map((folder) => folder)}\r\n\r\n                    <button className='add-btn' onClick={handleAddButtonClick}>\r\n                        <TbPlus className='add-icon' />\r\n                    </button>\r\n\r\n                </div>\r\n\r\n                <button className='btn-start' onClick={startAnalyzes}>Run analyzes</button>\r\n\r\n            </div>\r\n        )\r\n    } else if (props.type === \"Help\") {\r\n        return (\r\n            <div className='enter-question'>\r\n\r\n                <div className='search-field'>\r\n                    <span className='enter-name'>Most common questions about the tool.</span>\r\n\r\n                    <input\r\n                        className='search-input'\r\n                        placeholder='Ex: How insert data'\r\n                        value={filter}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className='questions-container'>\r\n\r\n                    {filteredQuestions.map((question, index) => (\r\n                        <Question key={index} question={question.question} response={question.response} />\r\n                    ))}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    } else if (props.type === \"Github\") {\r\n        return (\r\n            <div className='news-container'>\r\n\r\n                <span>Outras ferramentas e repositórios</span>\r\n\r\n            </div>\r\n        )\r\n    } else if (props.type === \"News\") {\r\n        return (\r\n            <div className='news-container'>\r\n\r\n                <span>Novas atualizações e ajustes</span>\r\n\r\n            </div>\r\n        )\r\n    } else if (props.type === \"Settings\") {\r\n        return (\r\n            <div className='news-container'>\r\n\r\n                <span>Configurações</span>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View","C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\View\\View.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\Question\\Question.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\FolderSelector\\FolderSelector.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Table\\TableSegmentation.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Radar\\Radar.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Boxplot\\BoxplotParcellation.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Table\\TableParcellation.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Boxplot\\BoxplotSegmentation.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Scatter\\Scatter.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Line\\Midline.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\graphs\\Boxplot\\Boxplot.jsx",[],"C:\\Users\\Usuario\\Desktop\\InCCsight\\Repo-InCCsight\\src\\components\\InfoTool\\InfoTool.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":7,"column":9,"nodeType":"91","endLine":13,"endColumn":4},{"ruleId":"92","severity":1,"message":"93","line":16,"column":10,"nodeType":"94","messageId":"95","endLine":16,"endColumn":20},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","The 'phrases' array makes the dependencies of useEffect Hook (at line 22) change on every render. To fix this, wrap the initialization of 'phrases' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'openWindow' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]